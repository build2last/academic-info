# coding: utf-8
#自动生成index.html
# 加入校名背景颜色，随机产生，并无其他意义
# To do：赋予颜色意义
import os
import sys
import codecs
import random

def index_generate(file_list):
    containner_head =u'''
        <!DOCTYPE html>
        <html>
          <head>	  
            <meta charset="utf-8">
            <title>Paper Hero</title>
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link rel="stylesheet" href="http://apps.bdimg.com/libs/bootstrap/3.3.0/css/bootstrap.min.css">
            <style type="text/css">
                body
                {
                padding-bottom: 60px;
                }
                .insti-label
                {
                    height:120px;
                    background:#FFF8DC;
                    text-align:center;
                    vertical-align:middle;
                    margin-bottom:1em;           
                }
            </style>
          </head>
          <body>  
            <div class="container">
                <div class="row clearfix">
                    <div class="col-md-12 column">
                        <div class="jumbotron">
                            <h1>
                                <font face="微软雅黑" color="#8B008B">★高校paper英雄榜</strong></font>
                            </h1>
                            <h2>College Academic</h2>
                            <p>
                                根据从微软学术收集到数据，分析列举各个高校学者论文被引用次数的排行。
                            </p>
                        </div>
                    </div>
                </div>
        '''
    
    containner_end =u'''
                </div>
        </div>
    </div>
    </div>
    <script src="http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="http://apps.bdimg.com/libs/bootstrap/3.3.0/js/bootstrap.min.js"></script>
  </body>
  <footer style="bottom: 0; margin-top: 20px;">
    <p align="center">All data from a collection of Microsoft oxford academic API in 2016-05-01</p>
    <p align="center">Autogenerated By Liukun's PC</p>
  </footer>
</html>
    '''
    with codecs.open("./index.html",'w','utf-8') as f:
        f.write(containner_head)
        f.writelines(' <div class="row clearfix">')
        for i in file_list:
            school_name = i.split('.')[0].split('/')[1]
            sc_name = regular_institute_name(school_name)
            f.write('''
             <div class="col-md-4 column">
                <h2 style="background-color:%s">
                   %s
                </h2>
                <p>
                    <a class="btn" href="%s">%s</a>
                </p>
            </div>
            '''%(random.sample(["#DCDCDC"  ,"#FFE4E1" , "#F5FFFA", "#F5F5F5"  , "#F8F8FF, #F5F5DC"  , "#FFFACD"  , "#FAFAD2"  , "#FFFFE0" ], 1)[0], sc_name, i, sc_name))
        f.writelines('</div>')
        f.write(containner_end)   

def regular_institute_name(name):
    words_list = name.split(' ')
    index = 0
    for i in words_list:
        if len(i)>3:
            words_list[index] = i[0].upper() + i[1:]
        index +=1
    reg_name = ' '.join(words_list)
    return reg_name

def exe(path):
    fileList = []
    for root, dirs, files in os.walk(path):#递归path下所有目录
        for f_name in files:
            if f_name.lower().endswith('.html'):
                fileList.append(path + f_name)
    index_generate(fileList)
    
if __name__ =="__main__":
    fileList = []
    exe("pages/")
    """
    for root, dirs, files in os.walk('pages/'):#递归path下所有目录
        for f_name in files:
            if f_name.lower().endswith('.html'):
                fileList.append(f_name)
    index_generate(fileList)
    """